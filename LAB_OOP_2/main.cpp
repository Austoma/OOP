#include "Point.h"
#include <iostream>
#include <clocale>
using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian");
    // 1. Демонстрация вызова конструктора без параметров
    cout << "1. Конструктор без параметров:" << endl;
    Point p1; // вызов конструктора без параметров
    p1.show();
    cout << endl;

    // 2. Демонстрация вызова конструктора с параметрами
    cout << "2. Конструктор с параметрами:" << endl;
    Point p2("Иванов И.И.", 50000.0, 10); // вызов конструктора с параметрами
    p2.show();
    cout << endl;

    // 3. Демонстрация трех случаев вызова конструктора копирования

    // Случай 1: явное создание копии объекта
    cout << "3.1 Явное копирование:" << endl;
    Point p3(p2); // вызов конструктора копирования
    p3.show();
    cout << endl;

    // Случай 2: передача объекта в функцию по значению
    cout << "3.2 Передача в функцию по значению:" << endl;
    auto printPoint = [](Point p) { // лямбда-функция, принимающая Point по значению
        cout << "Внутри функции: ";
        p.show();
    };
    printPoint(p2); // вызовет конструктор копирования
    cout << endl;

    // Случай 3: возврат объекта из функции по значению
    cout << "3.3 Возврат из функции по значению:" << endl;
    auto createCopy = [](Point& orig) -> Point { // лямбда, возвращающая Point по значению
        return orig; // вызовет конструктор копирования
    };
    Point p4 = createCopy(p2); // может вызвать конструктор копирования (зависит от оптимизации компилятора)
    p4.show();
    cout << endl;

    return 0;
}
